cabal-version: 3.4

name:           sol-core
version:        0.0.0.0
-- synopsis:       $synopsis
-- description:    $description
-- category:       $category
-- homepage:       $gitrepo#readme
-- bug-reports:    $gitrepo/issues
-- maintainer:     $maintainer
build-type:     Simple

-- source-repository head
--   type: git
--   location: $gitrepo

common common-opts

  build-depends:
      base >= 4.19.0.0
    , mtl
    , containers
    , algebraic-graphs
    , array
    , filepath
    , megaparsec >= 9.6
    , optparse-applicative
    , parser-combinators >= 1.3
    , pretty
    , pretty-simple
    , syb
    , time
    , timeit
    , directory
    , split

  build-tool-depends: happy:happy, alex:alex

  default-language: Haskell2010
  default-extensions: OverloadedStrings
                      FlexibleInstances
                      FlexibleContexts
                      PatternSynonyms
                      TupleSections
                      TypeFamilies
                      BlockArguments
                      DeriveDataTypeable
                      ImportQualifiedPost
                      ScopedTypeVariables
                      TypeApplications
  ghc-options: -Wall -rtsopts

library
  import: common-opts

  -- cabal-fmt: expand src
  exposed-modules:
      Solcore.Desugarer.IfDesugarer
      Solcore.Desugarer.IndirectCall
      Solcore.Desugarer.MatchCompiler
      Solcore.Desugarer.ReplaceWildcard
      Solcore.Desugarer.Specialise
      Solcore.Desugarer.EmitCore
      Solcore.Desugarer.UniqueTypeGen
      Solcore.Frontend.Lexer.SolcoreLexer
      Solcore.Frontend.Lexer.SolverInputLexer
      Solcore.Frontend.Parser.SolcoreParser
      Solcore.Frontend.Parser.SolverInputParser
      Solcore.Frontend.Pretty.SolcorePretty
      Solcore.Frontend.Pretty.Name
      Solcore.Frontend.Pretty.ShortName
      Solcore.Frontend.Syntax
      Solcore.Frontend.Syntax.ElabTree
      Solcore.Frontend.Syntax.Ty
      Solcore.Frontend.Syntax.Contract
      Solcore.Frontend.Syntax.Name
      Solcore.Frontend.Syntax.Stmt
      Solcore.Frontend.Syntax.SyntaxTree
      Solcore.Frontend.TypeInference.Erase
      Solcore.Frontend.TypeInference.Id
      Solcore.Frontend.TypeInference.InvokeGen
      Solcore.Frontend.TypeInference.NameSupply
      Solcore.Frontend.TypeInference.SccAnalysis
      Solcore.Frontend.TypeInference.TcContract
      Solcore.Frontend.TypeInference.TcEnv
      Solcore.Frontend.TypeInference.TcMonad
      Solcore.Frontend.TypeInference.TcSat
      Solcore.Frontend.TypeInference.TcSimplify
      Solcore.Frontend.TypeInference.TcStmt
      Solcore.Frontend.TypeInference.TcSubst
      Solcore.Frontend.TypeInference.TcUnify
      Solcore.Pipeline.Options
      Solcore.Pipeline.SolcorePipeline
      Solcore.Pipeline.SolverPipeline
      Solcore.Primitives.Primitives
      Language.Core
      Language.Core.Parser
      Language.Core.Types
      Language.Yul
      Language.Yul.Parser
      Common.LightYear
      Common.Monad
      Common.Pretty
      Common.RIO
  hs-source-dirs:
      src
  ghc-options:
    -O1

executable sol-core
  import: common-opts
  main-is: Main.hs
  hs-source-dirs:
      app
  build-depends: sol-core
  build-tool-depends: alex:alex, happy:happy
  ghc-options:
    -O1
--  program-default-options
--    happy-options: --debug -gcai

executable solver
  import: common-opts
  main-is: Solver.hs
  hs-source-dirs:
      app
  build-depends: sol-core
  build-tool-depends: alex:alex, happy:happy

executable yule
    import: common-opts
    main-is:          Main.hs
    hs-source-dirs: yule
    default-extensions:
      LambdaCase
      PatternSynonyms
      BlockArguments
      ImportQualifiedPost
    other-modules: Locus, Options, TM, Translate, Builtins, Compress
    build-depends:    base ^>=4.19.1.0,
                      pretty >=  1.1,
                      containers >= 0.6,
                      mtl >= 2.3,
                      megaparsec >= 9.6,
                      parser-combinators >= 1.3,
                      optparse-applicative >= 0.18,
                      sol-core

test-suite sol-core-tests
  import: common-opts
  type: exitcode-stdio-1.0
  hs-source-dirs: test

  ghc-options:
    -Wall -threaded -rtsopts -with-rtsopts=-N -fdefer-typed-holes -O0

  main-is: Main.hs

  -- cabal-fmt: expand test -Main
  other-modules:
    Cases
    Solver

  build-depends:
    , sol-core
    , tasty
    , tasty-program
    , tasty-expected-failure
    , tasty-hunit
    , HUnit

  build-tool-depends: sol-core:sol-core, sol-core:yule
