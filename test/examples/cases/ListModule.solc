contract ListModule {
  data List(a) = Nil | Cons(a,List(a))
  data Bool = True | False


  function foo (f, g, x, y) {
    return f(x, g(foo(f,g,x,y))) ;
  }

  function zipWith (f,xs,ys) {
    match xs, ys { 
    | Nil, Nil => return Nil ; 
    | Cons(x1,xs1), Cons(y1,ys1) => 
      return Cons(f(x1,y1), zipWith(f,xs1,ys1)) ;
    };
  }

  function foldr(f, v, xs) {
    match xs {
    | Nil => return v; 
    | Cons(y,ys) => 
      return f(y, foldr(f,v,ys)) ; 
    };
  }
}
