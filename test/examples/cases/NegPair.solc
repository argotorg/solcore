
class  a : Neg {
   function neg(x:a) -> a;
}

data B = F | T;

instance B : Neg {
  function neg (x : B) { 
    match x {
    | F => return T;
    | T => return F; 
    }; 
  }
}

function fst (p) {
  match p {
  | (x,y) => return x;
  };
}

function snd(p) {
  match p {
  | (_,y) => return y;
  };
}

instance (a:Neg,b:Neg) => (a,b):Neg {
  function neg(p) {
    return (Neg.neg (fst(p)), Neg.neg(snd (p)));
  }
}


